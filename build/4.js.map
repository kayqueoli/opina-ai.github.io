{"version":3,"sources":["../../src/pages/questionaries-list/questionaries-list.module.ts","../../src/pages/questionaries-list/questionaries-list.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { QuestionariesListPage } from './questionaries-list';\n\n@NgModule({\n  declarations: [\n    QuestionariesListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(QuestionariesListPage),\n  ],\n})\nexport class QuestionariesListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionaries-list/questionaries-list.module.ts","import { IntroPage } from './../intro/intro';\nimport { Answer } from './../../providers/questionary/questionary';\nimport { Component } from '@angular/core';\nimport { AlertController, IonicPage, LoadingController, NavController, MenuController, ToastController } from 'ionic-angular';\nimport { Questionary, QuestionaryProvider } from \"../../providers/questionary/questionary\";\nimport { DatabaseProvider } from \"../../providers/database/database\";\nimport { Storage } from \"@ionic/storage\";\nimport { City } from \"../../providers/city/city\";\nimport { Plan } from \"../../providers/plan/plan\";\nimport { Respondent, Discipline } from \"../respondent-profile/respondent-profile\";\nimport { Question, QuestionProvider } from \"../../providers/question/question\";\nimport { PrioritizationProvider } from \"../../providers/prioritization/prioritization\";\nimport { MetricItem } from '../prioritization/prioritization';\nimport { RestProvider } from '../../providers/rest/rest';\n\n@IonicPage()\n@Component({\n  selector: 'page-questionaries-list',\n  templateUrl: 'questionaries-list.html',\n})\n\nexport class QuestionariesListPage {\n  disciplineList: Discipline[] = [];\n  questionaries: Questionary[] = [];\n  plan: any;\n  questionary: Questionary = new Questionary();\n  jobCity: City;\n  respondent: Respondent;\n  btnContinueDisabled: boolean = true;\n  loader: any;\n  progress: number;\n  points: number;\n  totalQuestionaries: number;\n  answeredQuestionaries: number;\n  questions: any;\n  metricItems: any;\n  answers: any[] = [];\n  useGame: boolean = false;\n\n  constructor(public toastCtrl: ToastController, public menuCtrl: MenuController, public navCtrl: NavController, private databaseProvider: DatabaseProvider, private questionProvider: QuestionProvider, private storage: Storage, private questionaryProvider: QuestionaryProvider, public loadingCtrl: LoadingController, private alertCtrl: AlertController, private priorizationProvider: PrioritizationProvider, public restProvider: RestProvider) {\n    this.answeredQuestionaries = 0;\n    this.totalQuestionaries = 0;\n    this.progress = 0;\n    this.plan = new Plan();\n    let entities = ['plan', 'questionaries', 'respondent'];\n    this.databaseProvider.verifyEntities(entities)\n      .then((data) => {\n        if (data.length > 0 && data.filter((data) => data == false).length == 0) {\n          this.setEntities();\n        } else {\n          this.navigateBack();\n        }\n      }).catch(() => this.navigateBack());\n    this.storage.get('useGame').then(data => {\n      this.useGame = data;\n      if (this.useGame) {\n        this.storage.get('helpHome')\n          .then((data) => {\n            if (data == null) {\n              this.help();\n            }\n          });\n      }\n    });\n    this.storage.get('disciplineSelected').then(data => this.disciplineList = data);\n  }\n\n  getResults(quesitonarySelected) {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.navCtrl.push('ResultsPage', {\n      questionary: quesitonarySelected,\n    }).then(this.loader.dismiss());\n  }\n\n  openMenu() {\n    this.menuCtrl.open();\n  }\n\n  presentToast() {\n    const toast = this.toastCtrl.create({\n      message: 'Clique no icone em caso de dúvidas!',\n      duration: 4000,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  //Verifica se as entidades estão armazenadas no IONIC Storage\n  setEntities() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.storage.get('plan')\n      .then((data) => {\n        this.plan = data;\n        this.questionaryProvider.getAllQuestionariesByPlan(this.plan)\n          .then((data: Questionary[]) => {\n            this.storage.set('questionaries', data);\n            this.questionaries = data;\n            this.storage.get('respondent')\n              .then((data) => {\n                this.respondent = data;\n                this.questionaryProvider.getAllPlanQuestionariesAnsweredByRespondent(this.plan, this.questionaries, this.respondent)\n                  .then((data: Questionary[]) => {\n                    if (data != null) {\n                      //--------------IMPORTANTE---------------\n                      //-------SELEÇÃO DOS QUESTIONÁRIOS PELO TIPO DO RESPONDENTE-------\n                      if (this.respondent.type == \"Discente evadido\") {\n                        data = data.filter(item =>\n                          item.name === \"POSCOMP - Evasão Discente\"\n                        );\n                      } else if (this.respondent.type == \"Discente formado\") {\n                        data = data.filter(item =>\n                          item.name === \"POSCOMP - Discente Egresso\"\n                        );\n                      } else if (this.respondent.type == \"Discente\") {\n                        let dataTemp: Questionary[] = [];\n                        this.disciplineList.forEach(discipline => {\n                          let questTemp = data.filter(quest =>\n                            quest.name.endsWith(discipline.name)\n                          );\n                          questTemp.forEach(q => {\n                            dataTemp.push(q);\n                          })\n                        });\n                        data = data.filter(item => (\n                          item.name === \"POSCOMP - Avaliação da Secretaria\" ||\n                          item.name === \"POSCOMP - Avaliação da Coordenação\"\n                        ));\n                        dataTemp.forEach(dat =>\n                          data.push(dat)\n                        );\n                      } else if (this.respondent.type == \"Docente\") {\n                        data = data.filter(item => (\n                          item.name === \"POSCOMP - Avaliação da Secretaria\" ||\n                          item.name === \"POSCOMP - Avaliação da Coordenação\"\n                        ));\n                      }\n                      //-------SELEÇÃO DOS QUESTIONÁRIOS PELO TIPO DO RESPONDENTE-------\n                      //--------------IMPORTANTE---------------\n                      for (let i = 0; i < data.length; i++) {\n                        if (data[i].answered)\n                          this.progress = this.progress + 1;\n                      }\n                      this.totalQuestionaries = data.length;\n                      this.answeredQuestionaries = this.progress;\n                      this.progress = this.progress / data.length;\n                      this.progress = this.progress * 100;\n                      this.questionaries = data;\n                      this.loader.dismiss();\n                    } else {\n                      this.questionaries = [];\n                      this.showAlertGetAllPlanQuestionariesAnsweredByRespondent();\n                    }\n                  }).catch((error) => {\n                    console.error(error);\n                    this.restProvider.sendGoogleAnalyticsErrorData(\n                      'QuestionariesListPage',\n                      'setEntities',\n                      error);\n                    this.showAlertGetAllPlanQuestionariesAnsweredByRespondent();\n                  });\n              }).catch((error) => {\n                console.error(error);\n                this.restProvider.sendGoogleAnalyticsErrorData(\n                  'QuestionariesListPage',\n                  'setEntities',\n                  error);\n                this.showAlertGetRespondent();\n              });\n          }).catch((error) => {\n            console.error(error);\n            this.restProvider.sendGoogleAnalyticsErrorData(\n              'QuestionariesListPage',\n              'setEntities',\n              error);\n            this.showAlertGetAllQuestionariesByPlan();\n          });\n      }).catch((error) => {\n        console.error(error);\n        this.restProvider.sendGoogleAnalyticsErrorData(\n          'QuestionariesListPage',\n          'setEntities',\n          error);\n        this.showAlertGetAllPlan();\n      });\n    this.storage.get('points').then((data) => this.points = data);\n  }\n\n  //Seleciona o questionário\n  setQuestionary(questionary) {\n    this.questionary = questionary;\n    this.btnContinueDisabled = false;\n  }\n\n  //Retorna para a página de perfil\n  navigateBack() {\n    this.navCtrl.setRoot('RespondentProfilePage', {});\n  }\n\n  //Navegação para as perguntas\n  navigate() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.storage.set('plan', this.plan).then(() => {\n      //Consulta as questões do questionário\n      this.questionProvider.getAllQuestionsByQuestionary(this.questionary, 0)\n        .then((result: Question[]) => {\n          if (result != null) {\n            this.questions = result;\n            //se metric_id for nulo, navega para página de questionário\n            if (this.questions[0].metricId == null) {\n              this.navigateQuestionaryPage();\n              //Se houver metric_id, carrega as métricas específicas  e navega para página de priorization\n            } else {\n              this.loadMetrics(this.questions[0].metricId);\n            }\n          } else {\n            this.showAlertGetAllQuestionsByQuestionaryNavigate();\n          }\n        }).catch((error) => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'QuestionariesListPage',\n            'navigate',\n            error);\n          this.showAlertGetAllQuestionsByQuestionaryNavigate();\n        });\n    }).catch((error) => {\n      console.error(error);\n      this.restProvider.sendGoogleAnalyticsErrorData(\n        'QuestionariesListPage',\n        'navigate',\n        error);\n      this.showAlertSetPlan();\n    });\n  }\n\n  //Navegação para página do questionário\n  navigateQuestionaryPage() {\n    this.navCtrl.push('QuestionaryPage', {\n      points: this.points,\n      questionary: this.questionary,\n      currentQuestionIndex: 0,\n      currentQuestion: new Question(),\n      answers: [],\n      answersNeighborhoods: [],\n      prioritizations: []\n    }).then(this.loader.dismiss());\n  }\n\n  // Navegação para página de priorização\n  navigatePrioritizationPage() {\n    this.navCtrl.push('PrioritizationPage', {\n      points: this.points,\n      plan: this.plan,\n      respondent: this.respondent,\n      questionary: this.questionary,\n      questions: this.questions,\n      metricItems: this.metricItems,\n      currentMetricItem: this.metricItems[0],\n      currentMetricItemIndex: 0,\n      currentQuestionIndex: 0,\n      currentQuestion: this.questions[0],\n      answers: this.answers,\n      answersNeighborhoods: [],\n      prioritizations: []\n    }).then(this.loader.dismiss());\n  }\n\n  //Carrega as métricas e vai para a página de priorização\n  loadMetrics(metricId) {\n    //------------------------CARREGA OS ITENS DE MÉTRICAS-----------------------------\n    //1 - GUT, 2 - ESCALA QUALITATIVA, (3-17) - Métricas do questionário de teste\n    this.priorizationProvider.getMetricValuesMetric(metricId)\n      .then((metricItems: MetricItem[]) => {\n        if (metricItems != null) {\n          this.metricItems = metricItems;\n          this.storage.set('metricItems', this.metricItems);\n          this.insertAnswerAndNavigateToPrioritization();\n        } else {\n          this.showAlertLoadMetrics(metricId);\n        }\n      }).catch((error) => {\n        console.error(error);\n        this.restProvider.sendGoogleAnalyticsErrorData(\n          'QuestionariesListPage',\n          'loadMetrics',\n          error);\n        this.showAlertLoadMetrics(metricId);\n      });\n  }\n\n  insertAnswerAndNavigateToPrioritization() {\n    this.createAnswer();\n    this.navigatePrioritizationPage();\n  }\n\n  createAnswer() {\n    let answer = new Answer();\n    answer.plan = this.plan;\n    answer.questionary = this.questionary;\n    answer.question = this.questions[0];\n    answer.respondent = this.respondent;\n    answer.answer = 1;\n    let dateTime = new Date();\n    answer.created_at = new Date(dateTime.valueOf() - dateTime.getTimezoneOffset() * 60000).toISOString();\n    answer.isCompleted = false;\n    this.answers.push(answer);\n  }\n\n  //Consulta todas as questões do questionário\n  getAllQuestionsByQuestionary(questionary, isRuralZone) {\n    this.questionProvider.getAllQuestionsByQuestionary(questionary, isRuralZone)\n      .then((result: Question[]) => {\n        if (result != null) {\n          this.questions = result;\n        } else {\n          this.showAlertGetAllQuestionsByQuestionary(questionary, isRuralZone);\n        }\n      }).catch((error) => {\n        console.error(error);\n        this.restProvider.sendGoogleAnalyticsErrorData(\n          'QuestionariesListPage',\n          'getAllQuestionsByQuestionary',\n          error);\n        this.showAlertGetAllQuestionsByQuestionary(questionary, isRuralZone);\n      });\n  }\n\n  //Mensagem caso não consiga carregar as métricas\n  showAlertLoadMetrics(metricId) {\n    this.metricItems = [];\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.loadMetrics(metricId);\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetAllPlanQuestionariesAnsweredByRespondent() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados dos questionários. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.setEntities();\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetRespondent() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Erro ao acessar os dados do respondente. Por favor, preencha novamente.',\n      buttons: [{\n        text: \"Ok\",\n        handler: () => {\n          this.navigateBack();\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetAllQuestionariesByPlan() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados de questionários. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Ok\",\n        handler: () => {\n          this.navCtrl.setRoot(IntroPage, {});\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetAllPlan() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível os dados do plano. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Ok\",\n        handler: () => {\n          this.navCtrl.setRoot(IntroPage, {});\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetAllQuestionsByQuestionaryNavigate() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os questões do questionário. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.navigate();\n        }\n      }]\n    })\n    alert.present();\n  }\n\n  showAlertSetPlan() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível armazenar os dados do plano. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.navigate();\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showAlertGetAllQuestionsByQuestionary(questionary, isRuralZone) {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados das questões. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.getAllQuestionsByQuestionary(questionary, isRuralZone);\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  showModal() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.navCtrl.push('AchievementPage', {\n      points: this.points,\n      plan: this.plan,\n    }).then(this.loader.dismiss());\n  }\n\n  //Mensagem motivadora da narrativa\n  help() {\n    let alert = this.alertCtrl.create({\n      title: '<div text-center>Olá! Bem vindo ao Opina Aí</div>',\n      message:\n        //----------------------MENSAGEM------------------\n        '<div class=\"alert-align-center\">'\n        + '<img class=\"img-alert\" src=\"assets/gifs/gif-a-3.gif\"/>'\n        + '</div>'\n        + '<div class=\"dialogue-box\"><div class=\"tdialogue-box-text\">'\n        + '<div><strong>Bem vindo ao Opina Aí!</strong></div>'\n        // + '<div text-center>Sinta-se a vontade para contribuir com sua <strong>cidade</strong> respondendo os questionários!</div>'\n        // + '<div text-center>Sua <strong>participação</strong> é muito importante!</div>'\n        // + '</div></div>',\n        + '<div text-center>Sinta-se a vontade para contribuir com a <strong>autoavaliação do POSCOMP</strong> respondendo os questionários!</div>'\n        + '<div text-center>Sua <strong>participação</strong> é muito importante!</div>'\n        + '</div></div>',\n      //----------------------MENSAGEM------------------\n      buttons: [{\n        text: \"Entendi, quero participar!\",\n        handler: () => {\n          this.storage.get('helpHome')\n            .then((data) => {\n              if (data == null) {\n                this.presentToast();\n                this.storage.set('helpHome', true);\n              }\n            });\n        }\n      }]\n    });\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionaries-list/questionaries-list.ts"],"sourceRoot":""}