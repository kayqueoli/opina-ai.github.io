{"version":3,"sources":["../../src/pages/home/home.ts","../../src/providers/rest/rest.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/answer/answer.ts","../../src/providers/prioritization/prioritization.ts","../../src/providers/question/question.ts","../../src/providers/neighborhood/neighborhood.ts","../../src/providers/respondent/respondent.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/questionary/questionary.ts","../../src/providers/database/database.ts","../../src/pages/intro/intro.ts","../../src/providers/city/city.ts","../../src/providers/plan/plan.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { AlertController, LoadingController, NavController, ToastController, Nav } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { City, CityProvider } from \"../../providers/city/city\";\nimport { Plan, PlanProvider } from \"../../providers/plan/plan\";\nimport { Questionary, QuestionaryProvider } from \"../../providers/questionary/questionary\";\nimport { DatabaseProvider } from \"../../providers/database/database\";\nimport { RestProvider } from \"../../providers/rest/rest\";\nimport { Respondent } from '../respondent-profile/respondent-profile';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  cities: City[] = [];\n  userTypes: UserType[] = [];\n  plans: Plan[] = [];\n  questionaries: Questionary[] = [];\n  btnContinueDisabled: boolean = true;\n  btnCaseTestDisabled: boolean = false;\n  loader: any;\n  isRuralZone: boolean = false;\n  useGame: boolean = false;\n\n  constructor(public navCtrl: NavController, private toastCtrl: ToastController, private cityProvider: CityProvider, private planProvider: PlanProvider, private questionaryProvider: QuestionaryProvider, public loadingCtrl: LoadingController, private storage: Storage, private databaseProvider: DatabaseProvider, private alertCtrl: AlertController, public restProvider: RestProvider) {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.restProvider.checkConnectionLocalVersion(this.navCtrl.getActiveChildNav());\n    this.loadUserTypes();\n    this.changeZone();\n    setTimeout(() => {\n      this.existsAppCityPlan();\n      this.loader.dismiss();\n    }, 1000);\n  }\n\n  existsAppCityPlan() {\n    let entities = ['city', 'plan', 'isRuralZone', 'questionaries'];\n    this.databaseProvider.verifyEntities(entities)\n      .then((data) => {\n        if (data.length > 0 && data.filter((data) => data == false).length == 0) {\n          this.storage.get('respondent')\n            .then((respondent: Respondent) => {\n              if (respondent != null) {\n                let alert = this.alertCtrl.create({\n                  title: 'Já existe um usuário respondendo os questionários',\n                  message: 'Você gostaria de continuar respondendo os questionários com o usuário: <br/> CPF - ' + respondent.cpf + '?',\n                  buttons: [{\n                    text: \"Sim\",\n                    handler: () => {\n                      this.navigateQuestionaryList();\n                    }\n                  }, {\n                    text: \"Não\",\n                    handler: () => {\n                      this.removeStoredData();\n                    }\n                  }]\n                });\n                alert.present();\n              } else {\n                this.removeStoredData();\n              }\n            })\n            .catch(() => {\n              this.removeStoredData();\n            });\n        } else {\n          this.getAllCitiesWithPlan();\n        }\n      })\n      .catch(() => this.getAllCitiesWithPlan());\n  }\n\n  getAllCitiesWithPlan() {\n    this.cityProvider.getAllCitiesWithPlan()\n      .then((cities: City[]) => {\n        if (cities != null) {\n          this.cities = cities;\n        } else {\n          this.cities = [];\n          this.showAlertGetAllCitiesWithPlan();\n        }\n      })\n      .catch(() => {\n        this.cities = [];\n        this.showAlertGetAllCitiesWithPlan();\n      });\n  }\n\n  showAlertGetAllCitiesWithPlan() {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.getAllCitiesWithPlan();\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  getAllPlansByCity(city) {\n    this.planProvider.getAllPlansByCity(city)\n      .then((plans: Plan[]) => {\n        if (plans != null) {\n          this.storage.set('city', city).then(() => {\n            // Plano de mobilidade temporário [x]\n            //-----------------------TEMPORÁRIO-----------------------\n            let p: Plan = {\n              city: city,\n              id: 666,\n              name: \"Plano de Mobilidade\",\n              usePrioritization: false\n            }\n            plans.push(p);\n            //-----------------------TEMPORÁRIO-----------------------\n            this.plans = plans;\n            this.questionaries = [];\n            this.btnContinueDisabled = true;\n          });\n        } else {\n          this.plans = [];\n          this.showAlertGetAllPlansByCity(city);\n        }\n      })\n      .catch(() => {\n        this.showAlertGetAllPlansByCity(city);\n      });\n  }\n\n  loadUserTypes() {\n    let userType = new UserType();\n    userType.id = 41;\n    userType.name = \"Cidadão Comum\";\n    this.userTypes.push(userType);\n    userType = new UserType();\n    userType.id = 42;\n    userType.name = \"Funcionário da Prefeitura\";\n    this.userTypes.push(userType);\n    userType = new UserType();\n    userType.id = 43;\n    userType.name = \"Pesquisador NEIRU\";\n    this.userTypes.push(userType);\n  }\n\n  selectUserType(userType) {\n    this.storage.set('userType', userType);\n  }\n\n  showAlertGetAllPlansByCity(city) {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.getAllPlansByCity(city);\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  getAllQuestionariesByPlan(plan) {\n    this.questionaryProvider.getAllQuestionariesByPlan(plan)\n      .then((questionaries: Questionary[]) => {\n        if (questionaries != null) {\n          this.storage.set('plan', plan);\n          // Questionário temporário [x]\n          //----------------------------TEMPORÁRIO---------------------------------\n          // let questionaryTemp1: Questionary = {\n          //   id: 666,\n          //   name: \"Centro - Diagnóstico Geral\",\n          //   answered: false,\n          //   plan: plan,\n          //   questions: null,\n          // }\n          // let questionaryTemp2: Questionary = {\n          //   id: 661,\n          //   name: \"Centro - Diagnóstico Específico\",\n          //   answered: false,\n          //   plan: plan,\n          //   questions: null,\n          // }\n          // let questionaryTemp3: Questionary = {\n          //   id: 660,\n          //   name: \"Centro - Comerciante\",\n          //   answered: false,\n          //   plan: plan,\n          //   questions: null,\n          // }\n          // questionaries.push(questionaryTemp1);\n          // questionaries.push(questionaryTemp2);\n          // questionaries.push(questionaryTemp3);\n          // this.questionaries = this.questionaryProvider.resolveQuestionaryIcon(questionaries);\n          //----------------------------TEMPORÁRIO---------------------------------\n          this.storage.set('questionaries', this.questionaries);\n          let points: number = 0;\n          this.storage.set('points', points);\n        } else {\n          this.questionaries = [];\n          this.showAlertGetAllQuestionariesByPlan(plan);\n        }\n      })\n      .catch(() => {\n        this.showAlertGetAllQuestionariesByPlan(plan);\n      });\n  }\n\n  showAlertGetAllQuestionariesByPlan(plan) {\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.getAllQuestionariesByPlan(plan);\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  help() {\n    let alert = this.alertCtrl.create({\n      title: '<div text-center>Nos conte sobre você!</div>',\n      message:\n        '<div class=\"alert-align-center\">'\n        + '<img class=\"img-alert\" src=\"assets/imgs/publicdomainq-presenter.png\"/>'\n        + '</div>'\n        + '<div class=\"alert-align-center\"><strong>Vamos nos conhecer um pouco melhor...</strong></div>'\n        + '<div text-center>Nos conte sobre você!</div>'\n        + '<div text-center>Onde você mora?</div>'\n        + '<div text-center>Em qual plano diretor você quer opinar?</div>',\n      buttons: [{\n        text: \"Entendi, quero participar!\",\n        handler: () => {\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  presentToast() {\n    const toast = this.toastCtrl.create({\n      message: 'Exemplo de mensagem toasting',\n      duration: 3000,\n      position: 'top',\n      showCloseButton: true,\n      closeButtonText: \"X\"\n    });\n    toast.present();\n  }\n\n  enableBtnContinue() {\n    this.btnContinueDisabled = false;\n  }\n\n  changeZone() {\n    this.storage.set('isRuralZone', this.isRuralZone ? 1 : 0);\n  }\n\n  navigateQuestionaryList() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.navCtrl.setRoot('QuestionariesListPage', {}).then(() => this.loader.dismiss());\n  }\n\n  navigateProfilePage() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.navCtrl.setRoot('RespondentProfilePage', {}).then(() => this.loader.dismiss());\n  }\n\n  removeStoredData() {\n    this.storage.remove('respondent')\n      .then(() => {\n        this.storage.remove('plan')\n          .then(() => {\n            this.storage.remove('city')\n              .then(() => {\n                this.storage.remove('isRuralZone')\n                  .then(() => {\n                    this.storage.remove('questionaries')\n                      .then(() => {\n                        this.storage.remove('metricItems')\n                          .then(() => {\n                            this.storage.remove('neighborhoods')\n                              .then(() => {\n                                this.storage.remove('userType')\n                                  .then(() => {\n                                    this.storage.remove('points')\n                                      .then(() => {\n                                        this.storage.remove('intro')\n                                          .then(() => {\n                                            this.storage.remove('useGame')\n                                              .then(() => {\n                                                this.storage.remove('helpHome')\n                                                  .then(() => {\n                                                    console.log(\"Remoção de dados concluída\");\n                                                  })\n                                                  .catch((error) => {\n                                                    console.log(error);\n                                                  });\n                                              })\n                                              .catch((error) => {\n                                                console.log(error);\n                                              });\n                                          })\n                                          .catch((error) => {\n                                            console.log(error);\n                                          });\n                                      })\n                                      .catch((error) => {\n                                        console.log(error);\n                                      });\n                                  })\n                                  .catch((error) => {\n                                    console.log(error);\n                                  });\n                              })\n                              .catch((error) => {\n                                console.log(error);\n                              });\n                          })\n                          .catch((error) => {\n                            console.log(error);\n                          });\n                      })\n                      .catch((error) => {\n                        console.log(error);\n                      });\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                  });\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    this.getAllCitiesWithPlan();\n  }\n\n}\n\nexport class UserType {\n  id: number;\n  name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Network } from \"@ionic-native/network\";\r\nimport { AlertController, Nav, Platform } from \"ionic-angular\";\r\nimport jsSHA from 'jssha';\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { AppVersion } from \"@ionic-native/app-version\";\r\nimport { IntroPage } from '../../pages/intro/intro';\r\n\r\n@Injectable()\r\nexport class RestProvider {\r\n\r\n  headers: any;\r\n  isConnected: boolean = true;\r\n  // API_URL: string = \"https://api.neiru.org/\";\r\n  // API_URL: string = \"https://opina-ai-api.000webhostapp.com/\";\r\n  API_URL: string = \"https://opina-ai-api.com/\";\r\n  // API_URL: string = \"http://localhost/neiru-surveys-api/\";\r\n  googleAnalytics: any = <any>window;\r\n\r\n  constructor(public http: HttpClient, private network: Network, public alertCtrl: AlertController, public platform: Platform, public storage: Storage, private appVersionControl: AppVersion) {\r\n    this.createHeader();\r\n    this.connectSubscription();\r\n    this.disconnectSubscription();\r\n    this.checkConnection();\r\n  }\r\n\r\n  sendGoogleAnalyticsErrorData(className, methodName, error) {\r\n    this.googleAnalytics.gtag('event', 'erro', {\r\n      'event_category': 'Error: ' + className,\r\n      'event_label': methodName,\r\n      'event_action': error.name + ' : ' + error.message,\r\n      'event_value': error.name,\r\n    });\r\n  }\r\n\r\n  checkConnection() {\r\n    this.isConnected = this.network.type != 'none';\r\n    if (!this.isConnected) {\r\n      this.throwConnectionError();\r\n    } else {\r\n      if (this.network.type == 'wifi') {\r\n        new Promise(resolve => {\r\n          this.http.get(this.API_URL + \"check-connection.php\", { headers: this.headers })\r\n            .subscribe(data => {\r\n              resolve(data);\r\n            }, error => {\r\n              resolve(error);\r\n            });\r\n        }).then((data: APIResponse) => {\r\n          if (!!data && data != null && data.code == 200) {\r\n          } else {\r\n            this.throwConnectionError()\r\n          }\r\n        }).catch((error) => {\r\n          console.error(error);\r\n          this.throwConnectionError();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  checkConnectionLocalVersion(nav: Nav) {\r\n    this.isConnected = this.network.type != 'none';\r\n    if (!this.isConnected) {\r\n      this.throwConnectionError();\r\n    } else {\r\n      if (this.network.type == 'wifi') {\r\n        new Promise(resolve => {\r\n          this.http.get(this.API_URL + \"check-connection.php\", { headers: this.headers })\r\n            .subscribe(data => {\r\n              resolve(data);\r\n            }, error => {\r\n              resolve(error);\r\n            });\r\n        }).then((data: APIResponse) => {\r\n          if (!!data && data != null && data.code == 200) {\r\n            if (!!data.response && data.response != null) {\r\n              let appVersion = data.response.app_version;\r\n              let createdAt = data.response.created_at;\r\n              this.checkLocalVersion(nav, appVersion, createdAt);\r\n            } else {\r\n              this.throwConnectionError();\r\n            }\r\n          } else {\r\n            this.throwConnectionError()\r\n          }\r\n        }).catch((error) => {\r\n          console.error(error);\r\n          this.throwConnectionError();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  throwConnectionError() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Desconectado!',\r\n      message: 'Sem conexão com internet! <br/> Para acessar o aplicativo é necessário ter conexão com a internet. <br/> Conecte seu dispositivo a internet e tente novamente.',\r\n      buttons: [{\r\n        text: \"Ok\",\r\n        handler: () => {\r\n          this.platform.exitApp();\r\n        }\r\n      }]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  private checkLocalVersion(nav, app_version, created_at) {\r\n    this.storage.get(\"app_version\")\r\n      .then((data) => {\r\n        if (data != null && data.app_version != app_version || created_at != data.created_at) {\r\n          this.appVersionControl.getVersionNumber().then((data) => {\r\n            this.removeStoredData(nav);\r\n            this.setNewVersion(app_version, created_at);\r\n          }).catch((error) => {\r\n            console.log(error);\r\n            this.removeStoredData(nav);\r\n            this.setNewVersion(app_version, created_at);\r\n          });\r\n        }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        this.removeStoredData(nav);\r\n        this.setNewVersion(app_version, created_at);\r\n      });\r\n  }\r\n\r\n  private setNewVersion(app_version, created_at) {\r\n    let version: AppVersionResponse = new AppVersionResponse();\r\n    version.app_version = app_version;\r\n    version.created_at = created_at;\r\n    this.storage.set(\"app_version\", version);\r\n  }\r\n\r\n  private connectSubscription(): void {\r\n    this.network.onConnect()\r\n      .subscribe(() => {\r\n        this.isConnected = true;\r\n      });\r\n  }\r\n\r\n  private disconnectSubscription(): void {\r\n    this.network.onDisconnect()\r\n      .subscribe(() => {\r\n        this.isConnected = false;\r\n        this.throwConnectionError();\r\n      });\r\n  }\r\n\r\n  createHeader() {\r\n    this.headers = new HttpHeaders();\r\n    this.headers.append(\"Accept\", 'application/json');\r\n    this.headers.append(\"Content-Type\", 'application/json');\r\n  }\r\n\r\n  cryptography(stringToCrypto) {\r\n    let shaObj = new jsSHA(\"SHA-256\", \"TEXT\");\r\n    shaObj.update(stringToCrypto);\r\n    let hash = shaObj.getHash(\"HEX\");\r\n    return hash;\r\n  }\r\n\r\n  removeStoredData(nav: Nav) {\r\n    this.storage.remove('respondent')\r\n      .then(() => {\r\n        this.storage.remove('plan')\r\n          .then(() => {\r\n            this.storage.remove('city')\r\n              .then(() => {\r\n                this.storage.remove('isRuralZone')\r\n                  .then(() => {\r\n                    this.storage.remove('questionaries')\r\n                      .then(() => {\r\n                        this.storage.remove('metricItems')\r\n                          .then(() => {\r\n                            this.storage.remove('neighborhoods')\r\n                              .then(() => {\r\n                                this.storage.remove('userType')\r\n                                  .then(() => {\r\n                                    this.storage.remove('points')\r\n                                      .then(() => {\r\n                                        this.storage.remove('intro')\r\n                                          .then(() => {\r\n                                            this.storage.remove('useGame')\r\n                                              .then(() => {\r\n                                                this.storage.remove('helpHome')\r\n                                                  .then(() => {\r\n                                                    this.storage.remove('achievementList')\r\n                                                      .then(() => {\r\n                                                        this.storage.remove('showForm')\r\n                                                          .then(() => {\r\n                                                            console.log(\"Remoção de dados concluída\");\r\n                                                            nav.setRoot(IntroPage, {});\r\n                                                          })\r\n                                                          .catch((error) => {\r\n                                                            console.error(error);\r\n                                                          });\r\n                                                      })\r\n                                                      .catch((error) => {\r\n                                                        console.error(error);\r\n                                                      });\r\n                                                  })\r\n                                                  .catch((error) => {\r\n                                                    console.error(error);\r\n                                                  });\r\n                                              })\r\n                                              .catch((error) => {\r\n                                                console.error(error);\r\n                                              });\r\n                                          })\r\n                                          .catch((error) => {\r\n                                            console.error(error);\r\n                                          });\r\n                                      })\r\n                                      .catch((error) => {\r\n                                        console.error(error);\r\n                                      });\r\n                                  })\r\n                                  .catch((error) => {\r\n                                    console.error(error);\r\n                                  });\r\n                              })\r\n                              .catch((error) => {\r\n                                console.error(error);\r\n                              });\r\n                          })\r\n                          .catch((error) => {\r\n                            console.error(error);\r\n                          });\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                      });\r\n                  })\r\n                  .catch((error) => {\r\n                    console.error(error);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport class APIResponse {\r\n  code: number;\r\n  response: any;\r\n}\r\n\r\nexport class AppVersionResponse {\r\n  app_version: string;\r\n  created_at: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/rest/rest.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 121;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 121\n// module chunks = 9","var map = {\n\t\"../pages/about/about.module\": [\n\t\t291,\n\t\t7\n\t],\n\t\"../pages/achievement/achievement.module\": [\n\t\t294,\n\t\t6\n\t],\n\t\"../pages/intro/intro.module\": [\n\t\t293,\n\t\t8\n\t],\n\t\"../pages/prioritization/prioritization.module\": [\n\t\t295,\n\t\t5\n\t],\n\t\"../pages/questionaries-list/questionaries-list.module\": [\n\t\t296,\n\t\t4\n\t],\n\t\"../pages/questionary/questionary.module\": [\n\t\t297,\n\t\t3\n\t],\n\t\"../pages/respondent-profile/respondent-profile.module\": [\n\t\t299,\n\t\t1\n\t],\n\t\"../pages/results/results.module\": [\n\t\t298,\n\t\t0\n\t],\n\t\"../pages/thankyou/thankyou.module\": [\n\t\t292,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 163;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 163\n// module chunks = 9","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {RestProvider} from \"../rest/rest\";\nimport {Answer, AnswerNeighborhood} from \"../questionary/questionary\";\nimport {Prioritization} from \"../../pages/prioritization/prioritization\";\nimport {UserType} from \"../../pages/home/home\";\n\n@Injectable()\nexport class AnswerProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  insertAnswersData(answers: Answer[], answersNeighborhoods: AnswerNeighborhood[], prioritizations: Prioritization[], userType: UserType, useGame: boolean, points : number) {\n    return new Promise(resolve => {\n      let token = this.restProvider.cryptography(answers[0].plan.id + answers[0].questionary.id + answers[0].question.id + answers[0].respondent.id + answers[0].answer + answers[0].created_at);\n      let answersParsed = [];\n      answers.forEach((answer) => {\n        let item = {\n          \"plan_id\": answer.plan.id,\n          \"questionary_id\": answer.questionary.id,\n          \"question_id\": answer.question.id,\n          \"respondent_id\": answer.respondent.id,\n          \"answer\": answer.answer,\n          \"answer_text\": answer.answer_text ? answer.answer_text : null,\n          \"user_id\": userType.id,\n          \"created_at\": answer.created_at,\n          \"use_game\": useGame\n        };\n        answersParsed.push(item);\n      });\n\n      let answersNeighborhoodsParsed = [];\n      answersNeighborhoods.forEach((answersNeighborhood) => {\n        let item = {\n          \"plan_id\": answersNeighborhood.plan.id,\n          \"questionary_id\": answersNeighborhood.questionary.id,\n          \"question_id\": answersNeighborhood.question.id,\n          \"respondent_id\": answersNeighborhood.respondent.id,\n          \"neighborhood_id\": answersNeighborhood.neighborhood.id,\n          \"created_at\": answersNeighborhood.created_at\n        };\n        answersNeighborhoodsParsed.push(item);\n      });\n\n      let prioritizationsParsed = [];\n      prioritizations.forEach((prioritization) => {\n        let item = {\n          \"plan_id\": prioritization.plan.id,\n          \"questionary_id\": prioritization.questionary.id,\n          \"question_id\": prioritization.question.id,\n          \"respondent_id\": prioritization.respondent.id,\n          \"metric_item\": prioritization.metricItem.id,\n          \"metric_value\": prioritization.metricValue.value,\n          \"created_at\": prioritization.created_at,\n          \"use_game\": useGame\n        };\n        prioritizationsParsed.push(item);\n      });\n\n      let json = {\n        \"answers\": JSON.parse(JSON.stringify(answersParsed)),\n        \"answersNeighborhoods\": JSON.parse(JSON.stringify(answersNeighborhoodsParsed)),\n        \"prioritizations\": JSON.parse(JSON.stringify(prioritizationsParsed)),\n        \"user_id\": answers[0].respondent.id,\n        \"points\": points ? points : 0,\n        \"token\": token\n      };\n      let data = JSON.stringify(json);\n      this.http.post(this.restProvider.API_URL + \"insert-answers-data.php\", data, {headers: this.restProvider.headers})\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'AnswerProvider',\n            'insertAnswersData',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/answer/answer.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RestProvider } from \"../rest/rest\";\n\n@Injectable()\nexport class PrioritizationProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n\n  }\n\n  //-----------------------------IMPORTANTE-----------------------------\n  public getMetricItems(metricId) {\n    return new Promise(resolve => {\n      //metricID : 1 - GUT | 2 - Escala qualitativa | (3-18) - Métricas do questionário de teste\n      this.http.get(this.restProvider.API_URL + \"get-metric-items-by-metric.php?metric=\" + metricId, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'PrioritizationProvider',\n            'getMetricItems',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  public getMetricValuesMetric(metricId) {\n    return new Promise(resolve => {\n      //metricID : 1 - GUT | 2 - Escala qualitativa | (3-18) - Métricas do questionário de teste\n      this.http.get(this.restProvider.API_URL + \"get-all-metric-values-by-metric.php?metric=\" + metricId, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'PrioritizationProvider',\n            'getMetricValuesMetric',\n            error);\n          resolve(error);\n        });\n    });\n  }\n  //-----------------------------IMPORTANTE-----------------------------\n\n  public getMetricValues() {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-metric-values.php\", { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'PrioritizationProvider',\n            'getMetricValues',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/prioritization/prioritization.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Questionary } from \"../questionary/questionary\";\nimport { RestProvider } from \"../rest/rest\";\n\n@Injectable()\nexport class QuestionProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n\n  }\n\n  public getAllQuestionsByQuestionary(questionary, isRuralZone) {\n    return new Promise(resolve => {\n      //Essa api que vai ser alterada para vir com atributo Answered (true, false)\n      this.http.get(this.restProvider.API_URL + \"get-all-questions-by-questionary.php?questionary=\" + questionary.id + \"&isRuralZone=\" + isRuralZone, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'QuestionProvider',\n            'getMetricItems',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n}\n\nexport class Question {\n  id: number;\n  name: string;\n  description: string;\n  question: string;\n  position: number;\n  contextArea: string;\n  contextAreaIcon: string;\n  questionary: Questionary;\n  isRuralZone: boolean;\n  metricId: number;\n  // Novos campos\n  narrative: null;\n  sound: null;\n  useNarrative : boolean;\n  showDontNow : boolean;\n  useAnswerText : boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/question/question.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { City } from \"../city/city\";\nimport { RestProvider } from \"../rest/rest\";\n\n@Injectable()\nexport class NeighborhoodProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  getAllNeighborhoodsByCity(city) {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-neighborhoods-by-city.php?city=\" + city.id, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'NeighborhoodProvider',\n            'getAllNeighborhoodsByCity',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n}\n\nexport class Neighborhood {\n  id: number;\n  name: string;\n  city: City\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/neighborhood/neighborhood.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RestProvider } from \"../rest/rest\";\nimport { Respondent } from \"../../pages/respondent-profile/respondent-profile\";\n\n@Injectable()\nexport class RespondentProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  getRespondentByCPF(cpf) {\n    return new Promise(resolve => {\n      let json = {\n        \"cpf\": cpf\n      };\n      let data = JSON.stringify(json);\n      this.http.post(this.restProvider.API_URL + \"get-respondent-by-cpf.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'RespondentProvider',\n            'getRespondentByCPF',\n            error);\n          resolve(error);\n        });\n\n    });\n  }\n\n  getRespondentByCode(code, oldCode) {\n    if (code === null || code === oldCode) {\n      return new Promise(resolve => {\n        resolve(null);\n      });\n    } else {\n      return new Promise(resolve => {\n        let json = {\n          \"code\": code\n        };\n        let data = JSON.stringify(json);\n        this.http.post(this.restProvider.API_URL + \"get-respondent-by-code.php\", data, { headers: this.restProvider.headers })\n          .subscribe(data => {\n            resolve(data);\n          }, error => {\n            console.error(error);\n            this.restProvider.sendGoogleAnalyticsErrorData(\n              'RespondentProvider',\n              'getRespondentByCode',\n              error);\n            resolve(error);\n          });\n      });\n    }\n  }\n\n  getRespondentByEmail(email) {\n    return new Promise(resolve => {\n      let json = {\n        \"email\": email\n      };\n      let data = JSON.stringify(json);\n      this.http.post(this.restProvider.API_URL + \"get-respondent-by-email.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'RespondentProvider',\n            'getRespondentByEmail',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  getRespondentById(id) {\n    return new Promise(resolve => {\n      let json = {\n        \"id\": id\n      };\n      let data = JSON.stringify(json);\n      this.http.post(this.restProvider.API_URL + \"get-respondent-by-id.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'RespondentProvider',\n            'getRespondentById',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  insertRespondent(respondent: Respondent) {\n    return new Promise(resolve => {\n      let dateTime = new Date();\n      let createdAt = new Date(dateTime.valueOf() - dateTime.getTimezoneOffset() * 60000).toISOString();\n      // let token = this.restProvider.cryptography(respondent.email + respondent.residenceTimeRange + respondent.residenceNeighborhood.id + respondent.salaryRange + createdAt);\n      let token = this.restProvider.cryptography(respondent.type + respondent.caseTest + createdAt);\n      let json = {\n        \"cpf\": respondent.cpf ? respondent.cpf : null,\n        \"email\": respondent.email ? respondent.email : null,\n        \"phone\": respondent.phone ? respondent.phone : null,\n        \"whatsapp\": respondent.whatsapp ? respondent.whatsapp : null,\n        \"gender\": respondent.gender ? respondent.gender : null,\n        \"age_range\": respondent.ageRange ? respondent.ageRange : null,\n        \"salary_range\": respondent.salaryRange ? respondent.salaryRange : null,\n        \"residence_city_id\": respondent.residenceCity ? respondent.residenceCity.id : null,\n        \"residence_time_range\": respondent.residenceTimeRange ? respondent.residenceTimeRange : null,\n        \"residence_neighborhood_id\": respondent.residenceNeighborhood ? respondent.residenceNeighborhood.id : null,\n        \"job_city_id\": respondent.jobCity ? respondent.jobCity.id : null,\n        \"job_neighborhood_id\": respondent.jobNeighborhood ? respondent.jobNeighborhood.id : null,\n        \"job_name\": respondent.jobName ? respondent.jobName : null,\n        \"job_address\": respondent.jobAddress ? respondent.jobAddress : null,\n        //----------------- CASE 1 - POSCOMP -----------------\n        \"name\": respondent.name ? respondent.name : null,\n        \"code\": respondent.code ? respondent.code : null,\n        \"course_name\": respondent.courseName ? respondent.courseName : null,\n        \"course_entry\": respondent.courseEntry ? respondent.courseEntry : null,\n        \"course_left\": respondent.courseLeft ? respondent.courseLeft : null,\n        //----------------- CASE 2 - UNIFEI -----------------\n        \"residence_type\": respondent.residenceType ? respondent.residenceType : null,\n        \"have_children\": respondent.haveChildren,\n        \"residence_members\": respondent.residenceMembers ? respondent.residenceMembers : null,\n        \"have_job\": respondent.haveJob,\n        \"financial_assistance\": respondent.financialAssistance ? respondent.financialAssistance : null,\n        //-----------------CAMPOS OBRIGATÓRIOS-----------------\n        \"type\": respondent.type ? respondent.type : null,\n        \"game_type\": respondent.gameType ? respondent.gameType : null,\n        \"points\": respondent.points ? respondent.points : null,\n        \"case_test\": respondent.caseTest ? respondent.caseTest : null,\n        \"created_at\": createdAt ? createdAt : null,\n        \"token\": token\n        //-----------------CAMPOS OBRIGATÓRIOS-----------------\n      };\n      let data = JSON.stringify(json);\n      //-----------------INSERÇÃO NA API-----------------\n      this.http.post(this.restProvider.API_URL + \"insert-respondent.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'RespondentProvider',\n            'insertRespondent',\n            error);\n          resolve(error);\n        });\n      //-----------------INSERÇÃO NA API-----------------\n    });\n  }\n\n  updateRespondent(respondent: Respondent) {\n    return new Promise(resolve => {\n      let dateTime = new Date();\n      let updatedAt = new Date(dateTime.valueOf() - dateTime.getTimezoneOffset() * 60000).toISOString();\n      // let token = this.restProvider.cryptography(respondent.id + respondent.email + respondent.residenceTimeRange + respondent.residenceNeighborhood.id + respondent.salaryRange + updatedAt);\n      let token = this.restProvider.cryptography(respondent.id + respondent.type + respondent.caseTest + updatedAt);\n      let json = {\n        \"id\": respondent.id ? respondent.id : null,\n        \"cpf\": respondent.cpf ? respondent.cpf : null,\n        \"email\": respondent.email ? respondent.email : null,\n        \"phone\": respondent.phone ? respondent.phone : null,\n        \"whatsapp\": respondent.whatsapp ? respondent.whatsapp : null,\n        \"gender\": respondent.gender ? respondent.gender : null,\n        \"age_range\": respondent.ageRange ? respondent.ageRange : null,\n        \"salary_range\": respondent.salaryRange ? respondent.salaryRange : null,\n        \"residence_city_id\": respondent.residenceCity ? respondent.residenceCity.id : null,\n        \"residence_time_range\": respondent.residenceTimeRange ? respondent.residenceTimeRange : null,\n        \"residence_neighborhood_id\": respondent.residenceNeighborhood ? respondent.residenceNeighborhood.id : null,\n        \"job_city_id\": respondent.jobCity ? respondent.jobCity.id : null,\n        \"job_neighborhood_id\": respondent.jobNeighborhood ? respondent.jobNeighborhood.id : null,\n        \"job_name\": respondent.jobName ? respondent.jobName : null,\n        \"job_address\": respondent.jobAddress ? respondent.jobAddress : null,\n        //----------------- CASE 1 - POSCOMP -----------------\n        \"name\": respondent.name ? respondent.name : null,\n        \"code\": respondent.code ? respondent.code : null,\n        \"course_entry\": respondent.courseEntry ? respondent.courseEntry : null,\n        \"course_left\": respondent.courseLeft ? respondent.courseLeft : null,\n        \"course_name\": respondent.courseName ? respondent.courseName : null,\n        //----------------- CASE 2 - UNIFEI -----------------\n        \"residence_type\": respondent.residenceType ? respondent.residenceType : null,\n        \"have_children\": respondent.haveChildren,\n        \"residence_members\": respondent.residenceMembers ? respondent.residenceMembers : null,\n        \"have_job\": respondent.haveJob,\n        \"financial_assistance\": respondent.financialAssistance ? respondent.financialAssistance : null,\n        //-----------------CAMPOS OBRIGATÓRIOS-----------------\n        \"type\": respondent.type ? respondent.type : null,\n        \"points\": respondent.points ? respondent.points : null,\n        \"game_type\": respondent.gameType ? respondent.gameType : null,\n        \"case_test\": respondent.caseTest ? respondent.caseTest : null,\n        \"updated_at\": updatedAt ? updatedAt : null,\n        \"token\": token\n        //-----------------CAMPOS OBRIGATÓRIOS-----------------\n      };\n      let data = JSON.stringify(json);\n      //-----------------ATUALIZAÇÃO NA API-----------------\n      this.http.post(this.restProvider.API_URL + \"update-respondent.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'RespondentProvider',\n            'updateRespondent',\n            error);\n          resolve(error);\n        });\n      //-----------------ATUALIZAÇÃO NA API-----------------\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/respondent/respondent.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {ErrorHandler, NgModule} from '@angular/core';\nimport {IonicApp, IonicErrorHandler, IonicModule} from 'ionic-angular';\nimport {MyApp} from './app.component';\nimport {HomePage} from '../pages/home/home';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {DatabaseProvider} from '../providers/database/database';\nimport {RestProvider} from '../providers/rest/rest';\nimport {IonicStorageModule} from \"@ionic/storage\";\nimport {CityProvider} from '../providers/city/city';\nimport {PlanProvider} from '../providers/plan/plan';\nimport {QuestionaryProvider} from '../providers/questionary/questionary';\nimport {NeighborhoodProvider} from '../providers/neighborhood/neighborhood';\nimport {QuestionProvider} from '../providers/question/question';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RespondentProvider} from '../providers/respondent/respondent';\nimport {PrioritizationProvider} from '../providers/prioritization/prioritization';\nimport {AnswerProvider} from '../providers/answer/answer';\nimport {Network} from \"@ionic-native/network\";\nimport {AppVersion} from \"@ionic-native/app-version\";\nimport { IntroPage } from '../pages/intro/intro';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    IntroPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule,\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    IntroPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    DatabaseProvider,\n    RestProvider,\n    CityProvider,\n    PlanProvider,\n    QuestionaryProvider,\n    NeighborhoodProvider,\n    QuestionProvider,\n    RespondentProvider,\n    RespondentProvider,\n    PrioritizationProvider,\n    AnswerProvider,\n    Network,\n    AppVersion\n  ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { IntroPage } from './../pages/intro/intro';\nimport {Component, ViewChild} from '@angular/core';\nimport {AlertController, Nav, Platform} from 'ionic-angular';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {RestProvider} from \"../providers/rest/rest\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = IntroPage;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, private alertCtrl: AlertController, public restProvider: RestProvider) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  navigateQuestionaryList(){\n    this.nav.setRoot('QuestionariesListPage', {});\n  }\n\n  navigateToAbout() {\n    this.nav.setRoot('AboutPage', {});\n  }\n\n  navigateProfile() {\n    this.nav.setRoot('RespondentProfilePage', {});\n  }\n\n  refreshData() {\n    let alert = this.alertCtrl.create({\n      title: 'Limpar dados do aplicativo',\n      message: 'Você gostaria de limpar os dados já fornecidos e começar novamente?',\n      buttons: [{\n        text: \"Sim\",\n        handler: () => {\n          this.restProvider.removeStoredData(this.nav);\n        }\n      }, {\n        text: \"Não\"\n      }]\n    });\n    alert.present();\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Plan } from \"../plan/plan\";\nimport { Question } from \"../question/question\";\nimport { RestProvider } from \"../rest/rest\";\nimport { Respondent } from \"../../pages/respondent-profile/respondent-profile\";\nimport { Neighborhood } from \"../neighborhood/neighborhood\";\n\n@Injectable()\nexport class QuestionaryProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  public getAllQuestionariesByPlan(plan) {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-questionaries-by-plan.php?plan=\" + plan.id, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'QuestionaryProvider',\n            'getAllQuestionariesByPlan',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  public getAllResultsByQuestionary(questionary : Questionary) {\n    let data = JSON.stringify(questionary);\n    return new Promise(resolve => {\n      this.http.post(this.restProvider.API_URL + \"get-results-by-questionary.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'QuestionaryProvider',\n            'getAllResultsByQuestionary',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  public getAllPlanQuestionariesAnsweredByRespondent(plan: Plan, questionaries: Questionary[], respondent: Respondent) {\n    return new Promise(resolve => {\n      let planJson = {\n        \"plan_id\": plan.id\n      };\n\n      let respondentJson = {\n        \"respondent_id\": respondent.id\n      };\n\n      let questionariesJson = [];\n      questionaries.forEach((questionary) => {\n        let item = {\n          \"questionary_id\": questionary.id,\n          \"questionary_name\": questionary.name,\n          \"questionary_icon\": questionary.icon\n        };\n        questionariesJson.push(item);\n      });\n\n      let json = {\n        \"plan\": planJson,\n        \"questionaries\": JSON.parse(JSON.stringify(questionariesJson)),\n        \"respondent\": respondentJson\n      };\n      let data = JSON.stringify(json);\n      this.http.post(this.restProvider.API_URL + \"get-all-plan-questionaries-answered-by-respondent.php\", data, { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'QuestionaryProvider',\n            'getAllPlanQuestionariesAnsweredByRespondent',\n            error);\n          resolve(error);\n        });\n    });\n  }\n}\n\nexport class Questionary {\n  id: number;\n  name: string;\n  plan: Plan;\n  questions: Question[];\n  answered: boolean;\n  icon: string;\n}\n\nexport class Answer {\n  plan: Plan;\n  questionary: Questionary;\n  question: Question;\n  respondent: Respondent;\n  answer: number;\n  created_at: string;\n  isCompleted: boolean;\n  type: string;\n  answer_text: string;\n}\n\nexport class AnswerNeighborhood {\n  plan: Plan;\n  questionary: Questionary;\n  question: Question;\n  respondent: Respondent;\n  neighborhood: Neighborhood;\n  created_at: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/questionary/questionary.ts","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Storage} from \"@ionic/storage\";\n\n@Injectable()\nexport class DatabaseProvider {\n\n  constructor(public http: HttpClient, private storage: Storage) {\n  }\n\n  verifyEntities(entities): Promise<any> {\n    let promises_array: Array<any> = [];\n    for (let i = 0; i < entities.length; i++) {\n      promises_array.push(new Promise((resolve) => {\n        this.storage.get(entities[i])\n          .then((data) => {\n            if (data != null) {\n              resolve(true);\n            } else {\n              i = 9999;\n              resolve(false);\n            }\n          })\n          .catch(() => {\n            i = 9999;\n            resolve(false);\n          });\n      }))\n      ;\n    }\n    return Promise.all(promises_array);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, LoadingController, AlertController, Slides } from 'ionic-angular';\r\nimport { HomePage, UserType } from '../home/home';\r\nimport { Storage } from '@ionic/storage';\r\nimport { QuestionaryProvider, Questionary } from '../../providers/questionary/questionary';\r\nimport { CityProvider, City } from '../../providers/city/city';\r\nimport { PlanProvider, Plan } from '../../providers/plan/plan';\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\nimport { RestProvider } from '../../providers/rest/rest';\r\nimport { Respondent } from '../respondent-profile/respondent-profile';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-intro',\r\n  templateUrl: 'intro.html',\r\n})\r\nexport class IntroPage {\r\n  @ViewChild(Slides) slides: Slides;\r\n  loader: any;\r\n  cities: City[] = [];\r\n  userTypes: UserType[] = [];\r\n  plans: Plan[] = [];\r\n  questionaries: Questionary[] = [];\r\n  isRuralZone: boolean = false;\r\n  useGame: boolean = false;\r\n  userType: UserType;\r\n  city: City;\r\n  plan: Plan;\r\n\r\n  constructor(private cityProvider: CityProvider, private planProvider: PlanProvider, private questionaryProvider: QuestionaryProvider, public loadingCtrl: LoadingController, public navCtrl: NavController, public navParams: NavParams, private databaseProvider: DatabaseProvider, private storage: Storage, private alertCtrl: AlertController, public restProvider: RestProvider) {\r\n    setTimeout(() => {\r\n      this.changeZone();\r\n      this.existsAppCityPlan();\r\n      this.checkTrigger();\r\n    }, 1000);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.checkTrigger();\r\n  }\r\n\r\n  checkTrigger() {\r\n    //temporário\r\n    // this.useGamification();\r\n    // this.dontuseGamification();\r\n    //Temporário\r\n    this.storage.get('useGame').then((data) => {\r\n      console.log(\"checkTrigger\");\r\n      let trigger = document.getElementById(\"trigger\");\r\n      console.log(trigger);\r\n      if (data == null) {\r\n        if (trigger == null) {\r\n          this.useGamification();\r\n        } else {\r\n          this.dontuseGamification();\r\n        }\r\n      } else {\r\n        if (trigger == null) {\r\n          this.useGamification();\r\n        } else {\r\n          this.useGame = data;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useGamification() {\r\n    this.useGame = true;\r\n    this.storage.set('useGame', this.useGame);\r\n  }\r\n\r\n  dontuseGamification() {\r\n    this.useGame = false;\r\n    this.storage.set('useGame', this.useGame);\r\n  }\r\n\r\n  changeZone() {\r\n    this.storage.set('isRuralZone', this.isRuralZone ? 1 : 0);\r\n  }\r\n\r\n  nextSlide(event) {\r\n    this.checkTrigger();\r\n    if (event._touches.startX > 180) {\r\n      this.slides.slideNext();\r\n    } else {\r\n      this.slides.slidePrev();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    this.checkTrigger();\r\n    this.loader = this.loadingCtrl.create();\r\n    this.loader.present();\r\n    this.storage.set('intro', true).then(() => {\r\n      this.skipHome();\r\n    });\r\n  }\r\n\r\n  skipHome() {\r\n    this.userTypes.forEach(u => {\r\n      if (u.name == \"Cidadão Comum\") {\r\n        this.userType = u;\r\n        this.storage.set('userType', this.userType);\r\n      }\r\n    });\r\n    this.cityProvider.getAllCitiesWithPlan()\r\n      .then((cities: City[]) => {\r\n        if (cities != null) {\r\n          this.cities = cities;\r\n          this.cities.forEach(c => {\r\n            //IMPORTANTE - SELEÇÃO DA CIDADE\r\n            if (c.name == \"Itajubá\") {\r\n              this.city = c;\r\n              this.planProvider.getAllPlansByCity(this.city)\r\n                .then((plans: Plan[]) => {\r\n                  if (plans != null) {\r\n                    this.storage.set('city', this.city).then(() => {\r\n                      this.plans = plans;\r\n                      this.questionaries = [];\r\n                      this.plans.forEach(p => {\r\n                        //IMPORTANTE - SELEÇÃO DO PLANO\r\n                        // if (p.name == \"Avaliação POSCOMP\") {\r\n                        if (p.name == \"Avaliação Saúde Mental - UNIFEI\") {\r\n                          this.plan = p;\r\n                          this.questionaryProvider.getAllQuestionariesByPlan(this.plan)\r\n                            .then((questionaries: Questionary[]) => {\r\n                              if (questionaries != null) {\r\n                                this.storage.set('plan', this.plan);\r\n                                this.questionaries = questionaries;\r\n                                this.storage.set('questionaries', this.questionaries);\r\n                                let points: number = 0;\r\n                                this.storage.set('points', points);\r\n                                this.navigateProfilePage();\r\n                              } else {\r\n                                this.questionaries = [];\r\n                                this.showAlertGetAllQuestionariesByPlan();\r\n                              }\r\n                            }).catch((error) => {\r\n                              console.error(error);\r\n                              this.restProvider.sendGoogleAnalyticsErrorData(\r\n                                'IntroPage',\r\n                                'skipHome',\r\n                                error);\r\n                              this.showAlertGetAllQuestionariesByPlan();\r\n                            });\r\n                        }\r\n                      });\r\n                    });\r\n                  } else {\r\n                    this.plans = [];\r\n                    this.showAlertGetAllPlansByCity();\r\n                  }\r\n                }).catch((error) => {\r\n                  console.error(error);\r\n                  this.restProvider.sendGoogleAnalyticsErrorData(\r\n                    'IntroPage',\r\n                    'skipHome',\r\n                    error);\r\n                  this.showAlertGetAllPlansByCity();\r\n                });\r\n            }\r\n          });\r\n        } else {\r\n          this.cities = [];\r\n          this.showAlertGetAllCitiesWithPlan();\r\n        }\r\n      }).catch((error) => {\r\n        this.cities = [];\r\n        console.error(error);\r\n        this.restProvider.sendGoogleAnalyticsErrorData(\r\n          'IntroPage',\r\n          'skipHome',\r\n          error);\r\n        this.showAlertGetAllCitiesWithPlan();\r\n      });\r\n  }\r\n\r\n  existsAppCityPlan() {\r\n    let entities = ['city', 'plan', 'isRuralZone', 'questionaries'];\r\n    this.databaseProvider.verifyEntities(entities)\r\n      .then((data) => {\r\n        if (data.length > 0 && data.filter((data) => data == false).length == 0) {\r\n          this.storage.get('respondent')\r\n            .then((respondent: Respondent) => {\r\n              if (respondent != null && respondent.caseTest == \"Avaliação Saúde Mental - UNIFEI\") {\r\n                // let alert = this.alertCtrl.create({\r\n                //   title: 'Já existe um usuário respondendo os questionários',\r\n                //   message: 'Você gostaria de continuar respondendo os questionários com o usuário: <br/> CPF - ' + respondent.name + '?',\r\n                //   buttons: [{\r\n                //     text: \"Sim\",\r\n                //     handler: () => {\r\n                this.navigateQuestionaryList();\r\n                //     }\r\n                //   }, {\r\n                //     text: \"Não\",\r\n                //     handler: () => {\r\n                //       this.removeStoredData();\r\n                //     }\r\n                //   }]\r\n                // });\r\n                // alert.present();\r\n              } else {\r\n                this.removeStoredData();\r\n              }\r\n            }).catch((error) => {\r\n              console.error(error);\r\n              this.restProvider.sendGoogleAnalyticsErrorData(\r\n                'IntroPage',\r\n                'existsAppCityPlan',\r\n                error);\r\n              this.removeStoredData();\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  navigateQuestionaryList() {\r\n    this.storage.get('intro')\r\n      .then((data) => {\r\n        if (data != null) {\r\n          this.loader = this.loadingCtrl.create();\r\n          this.loader.present();\r\n          this.navCtrl.setRoot('QuestionariesListPage', {}).then(() => this.loader.dismiss());\r\n        }\r\n      }).catch(() => console.error('error setting intro'));\r\n  }\r\n\r\n  removeStoredData() {\r\n    this.storage.remove('respondent')\r\n      .then(() => {\r\n        this.storage.remove('plan')\r\n          .then(() => {\r\n            this.storage.remove('city')\r\n              .then(() => {\r\n                this.storage.remove('isRuralZone')\r\n                  .then(() => {\r\n                    this.storage.remove('questionaries')\r\n                      .then(() => {\r\n                        this.storage.remove('metricItems')\r\n                          .then(() => {\r\n                            this.storage.remove('neighborhoods')\r\n                              .then(() => {\r\n                                this.storage.remove('userType')\r\n                                  .then(() => {\r\n                                    this.storage.remove('points')\r\n                                      .then(() => {\r\n                                        this.storage.remove('intro')\r\n                                          .then(() => {\r\n                                            this.storage.remove('useGame')\r\n                                              .then(() => {\r\n                                                this.storage.remove('helpHome')\r\n                                                  .then(() => {\r\n                                                    this.storage.remove('achievementList')\r\n                                                      .then(() => {\r\n                                                        this.storage.remove('showForm')\r\n                                                          .then(() => {\r\n                                                            console.log(\"Remoção de dados concluída\");\r\n                                                          })\r\n                                                          .catch((error) => {\r\n                                                            console.error(error);\r\n                                                          });\r\n                                                      })\r\n                                                      .catch((error) => {\r\n                                                        console.error(error);\r\n                                                      });\r\n                                                  })\r\n                                                  .catch((error) => {\r\n                                                    console.error(error);\r\n                                                  });\r\n                                              })\r\n                                              .catch((error) => {\r\n                                                console.error(error);\r\n                                              });\r\n                                          })\r\n                                          .catch((error) => {\r\n                                            console.error(error);\r\n                                          });\r\n                                      })\r\n                                      .catch((error) => {\r\n                                        console.error(error);\r\n                                      });\r\n                                  })\r\n                                  .catch((error) => {\r\n                                    console.error(error);\r\n                                  });\r\n                              })\r\n                              .catch((error) => {\r\n                                console.error(error);\r\n                              });\r\n                          })\r\n                          .catch((error) => {\r\n                            console.error(error);\r\n                          });\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                      });\r\n                  })\r\n                  .catch((error) => {\r\n                    console.error(error);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  navigateProfilePage() {\r\n    this.navCtrl.setRoot('RespondentProfilePage', {}).then(() => this.loader.dismiss());\r\n  }\r\n\r\n  navigateHomePage() {\r\n    this.storage.get('intro')\r\n      .then((data) => {\r\n        if (data != null) {\r\n          this.navCtrl.setRoot(HomePage, {});\r\n        }\r\n      }).catch(() => console.error('error setting intro'));\r\n  }\r\n\r\n  showAlertGetAllCitiesWithPlan() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Oops!',\r\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\r\n      buttons: [{\r\n        text: \"Tentar novamente\",\r\n        handler: () => {\r\n          this.skipHome();\r\n        }\r\n      }]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  showAlertGetAllPlansByCity() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Oops!',\r\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\r\n      buttons: [{\r\n        text: \"Tentar novamente\",\r\n        handler: () => {\r\n          this.skipHome();\r\n        }\r\n      }]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  showAlertGetAllQuestionariesByPlan() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Oops!',\r\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\r\n      buttons: [{\r\n        text: \"Tentar novamente\",\r\n        handler: () => {\r\n          this.skipHome();\r\n        }\r\n      }]\r\n    });\r\n    alert.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/intro/intro.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Neighborhood } from \"../neighborhood/neighborhood\";\nimport { RestProvider } from \"../rest/rest\";\n\n@Injectable()\nexport class CityProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  public getAllCities() {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-cities.php\", { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'CityProvider',\n            'getAllCities',\n            error);\n          resolve(error);\n        });\n    });\n  }\n\n  // @annotateName\n  public getAllCitiesWithPlan() {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-cities-with-plan.php\", { headers: this.restProvider.headers })\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'CityProvider',\n            'getAllCitiesWithPlan',\n            error);\n          resolve(error);\n        });\n    });\n  }\n}\n\nexport class City {\n  id: number;\n  name: string;\n  neighborhoods: Neighborhood[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/city/city.ts","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {City} from \"../city/city\";\nimport {RestProvider} from \"../rest/rest\";\n\n@Injectable()\nexport class PlanProvider {\n\n  constructor(public http: HttpClient, public restProvider: RestProvider) {\n  }\n\n  public getAllPlansByCity(city) {\n    return new Promise(resolve => {\n      this.http.get(this.restProvider.API_URL + \"get-all-plans-by-city.php?city=\" + city.id, {headers: this.restProvider.headers})\n        .subscribe(data => {\n          resolve(data);\n        }, error => {\n          console.error(error);\n          this.restProvider.sendGoogleAnalyticsErrorData(\n            'PlanProvider',\n            'getAllPlansByCity',\n            error);\n          resolve(error);\n        });\n    });\n  }\n}\n\nexport class Plan {\n  id: number;\n  name: string;\n  city: City;\n  usePrioritization: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/plan/plan.ts"],"sourceRoot":""}